// ... (previous imports and interfaces)

// Update the GlobalChainInfo interface to include loanInterestRate
interface GlobalChainInfo {
  groupName: string;
  contribution: string;
  currency: string;
  duration: Duration;
  membersCount: number;
  loanInterestRate: number; // New field
  inviteLink?: string;
}

const SmartOnboarding = () => {
  // ... (previous state declarations)
  
  const [globalChainInfo, setGlobalChainInfo] = useState<GlobalChainInfo>({
    groupName: '',
    contribution: '',
    currency: 'USD',
    duration: '3 months',
    membersCount: 6,
    loanInterestRate: 5.0, // Default loan interest rate
  });

  // ... (rest of the component)

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-12 px-4">
      {/* ... (previous JSX) */}
      
      {step === 2 && (
        <motion.div>
          {/* ... (previous JSX for SocialChain) */}
          
          {chainType === 'global' ? (
            <div className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {/* Group Name */}
                <div>
                  <label className="block text-gray-700 font-medium mb-2">Group Name</label>
                  <input
                    type="text"
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                    placeholder="e.g. Global Savings #1"
                    value={globalChainInfo.groupName}
                    onChange={(e) => setGlobalChainInfo({...globalChainInfo, groupName: e.target.value})}
                  />
                </div>
                
                {/* Contribution Amount */}
                <div>
                  <label className="block text-gray-700 font-medium mb-2">Contribution Amount</label>
                  <div className="flex gap-2">
                    <div className="relative flex-1">
                      <input
                        type="number"
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                        placeholder="e.g. 100"
                        value={globalChainInfo.contribution}
                        onChange={(e) => setGlobalChainInfo({...globalChainInfo, contribution: e.target.value})}
                      />
                    </div>
                    <div className="w-32">
                      <select
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                        value={globalChainInfo.currency}
                        onChange={(e) => setGlobalChainInfo({...globalChainInfo, currency: e.target.value})}
                      >
                        {currencies.map(currency => (
                          <option key={currency} value={currency}>{currency}</option>
                        ))}
                      </select>
                    </div>
                  </div>
                </div>
              </div>
              
              {/* NEW: Loan Interest Rate Field */}
              <div className="grid grid-cols-1 gap-6">
                <div>
                  <label className="block text-gray-700 font-medium mb-2">Loan Interest Rate</label>
                  <div className="flex items-center gap-4">
                    <div className="flex-1">
                      <div className="relative">
                        <input
                          type="range"
                          min="0"
                          max="30"
                          step="0.5"
                          className="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer"
                          value={globalChainInfo.loanInterestRate}
                          onChange={(e) => setGlobalChainInfo({...globalChainInfo, loanInterestRate: parseFloat(e.target.value)})}
                        />
                        <div className="flex justify-between text-xs text-gray-500 mt-1">
                          <span>0%</span>
                          <span>15%</span>
                          <span>30%</span>
                        </div>
                      </div>
                    </div>
                    <div className="w-24">
                      <div className="flex items-center">
                        <input
                          type="number"
                          min="0"
                          max="30"
                          step="0.1"
                          className="w-full px-3 py-2 border border-gray-300 rounded-lg text-center"
                          value={globalChainInfo.loanInterestRate}
                          onChange={(e) => setGlobalChainInfo({...globalChainInfo, loanInterestRate: parseFloat(e.target.value)})}
                        />
                        <span className="ml-2 text-gray-600">%</span>
                      </div>
                    </div>
                  </div>
                  <p className="text-sm text-gray-500 mt-2">
                    Annual percentage rate for loans taken from the pool
                  </p>
                </div>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {/* Duration */}
                <div>
                  <label className="block text-gray-700 font-medium mb-2">Chain Duration</label>
                  <div className="grid grid-cols-2 gap-3">
                    {(['3 months', '6 months', '9 months', '1 year'] as Duration[]).map((duration) => (
                      <button
                        key={duration}
                        className={`py-3 px-4 rounded-lg border transition-colors ${
                          globalChainInfo.duration === duration
                            ? 'border-indigo-500 bg-indigo-50 text-indigo-600 font-medium'
                            : 'border-gray-300 text-gray-600 hover:bg-gray-50'
                        }`}
                        onClick={() => setGlobalChainInfo({...globalChainInfo, duration})}
                      >
                        {duration}
                      </button>
                    ))}
                  </div>
                </div>
                
                {/* Number of Members */}
                <div>
                  <label className="block text-gray-700 font-medium mb-2">Number of Members</label>
                  <div className="flex items-center">
                    <button 
                      className="p-2 rounded-full bg-gray-100 hover:bg-gray-200"
                      onClick={() => setGlobalChainInfo({...globalChainInfo, membersCount: Math.max(3, globalChainInfo.membersCount - 1)})}
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M20 12H4" />
                      </svg>
                    </button>
                    <div className="mx-4 text-xl font-medium">{globalChainInfo.membersCount}</div>
                    <button 
                      className="p-2 rounded-full bg-gray-100 hover:bg-gray-200"
                      onClick={() => setGlobalChainInfo({...globalChainInfo, membersCount: globalChainInfo.membersCount + 1})}
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                      </svg>
                    </button>
                  </div>
                  <p className="text-sm text-gray-500 mt-2">Minimum 3 members, maximum 12 members</p>
                </div>
              </div>
              
              {/* ... (rest of GlobalChain form) */}
            </div>
          )
        </motion.div>
      )}
      
      {/* ... (rest of the component) */}
    </div>
  );
};

export default SmartOnboarding;