# Internet Computer Network (ic for mainnet, local for development)
DFX_NETWORK=ic

# Canister IDs
# replace them with real canister ids
STAKING_POOL_CANISTER_ID=rrkah-fqaaa-aaaaa-aaaaq-cai
POOL_MANAGER_CANISTER_ID=ryjl3-tyaaa-aaaaa-aaaba-cai
ICP_INDEX_CANISTER_ID=qhbym-qaaaa-aaaaa-aaafq-cai
ICP_LEDGER_CANISTER_ID=ryjl3-tyaaa-aaaaa-aaaba-cai
EVENT_CANISTER_ID=rrkah-fqaaa-aaaaa-aaaaq-cai

# API Endpoints
ICP_GOVERNANCE_CANISTER_ID=rrkah-fqaaa-aaaaa-aaaaq-cai

# what needs to be done to make it actually functional
Blockchain Connections: The app will use mocked data because:

Canister IDs in .env.local are placeholders

Actual canisters aren't deployed yet

ICP network connections need configuration

Real Transactions: You'll see "Transaction successful" messages, but they're simulated. To make them real:

bash
dfx deploy # Deploy your canisters
export DFX_NETWORK=ic # For mainnet
Price Data: The price oracle uses mocked prices. For real data:

Get an API key from CoinGecko/CoinMarketCap

Or connect to an ICP price oracle canister

//previously part of the tsconfig.json for the types.d.ts
    "typeRoots": ["./types","node_modules/@types"]
